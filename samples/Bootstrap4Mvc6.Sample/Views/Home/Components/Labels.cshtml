<h1>Labels <small class="text-muted">(actually, Tags, but don't confuse with html tags)</small></h1>

@using (Bootstrap.BeginGridRow())
{
    using (Bootstrap.BeginGridCol(0, 7, 7, 7, 6))
    {
<pre>
@@Bootstrap.Label(LabelType.DefaultGray,   "DefaultGray")
@@Bootstrap.Label(LabelType.InfoCyan,      "InfoCyan")
@@Bootstrap.Label(LabelType.PrimaryBlue,   "PrimaryBlue")
@@Bootstrap.Label(LabelType.WarningOrange, "WarningOrange")
@@Bootstrap.Label(LabelType.DangerRed,     "DangerRed")
@@Bootstrap.Label(LabelType.SuccessGreen,  "SuccessGreen")
</pre>
    }
    using (Bootstrap.BeginGridCol(0, 5, 5, 5, 6))
    {
        @Bootstrap.Label(LabelType.DefaultGray, "DefaultGray")
        @Bootstrap.Label(LabelType.InfoCyan, "InfoCyan")
        @Bootstrap.Label(LabelType.PrimaryBlue, "PrimaryBlue")
        <br/>
        @Bootstrap.Label(LabelType.WarningOrange, "WarningOrange")
        @Bootstrap.Label(LabelType.DangerRed, "DangerRed")
        @Bootstrap.Label(LabelType.SuccessGreen, "SuccessGreen")
    }
}

<h3><code>Pill</code> mode (ex-<code>Badge</code>)</h3>
@using (Bootstrap.BeginGridRow())
{
    using (Bootstrap.BeginGridCol(0, 7, 7, 7, 6))
    {
<pre>
@@Bootstrap.Label(LabelType.DefaultGray,   "DefaultGray").Pill()
@@Bootstrap.Label(LabelType.InfoCyan,      "InfoCyan").Pill()
@@Bootstrap.Label(LabelType.PrimaryBlue,   "PrimaryBlue").Pill()
@@Bootstrap.Label(LabelType.WarningOrange, "WarningOrange").Pill()
@@Bootstrap.Label(LabelType.DangerRed,     "DangerRed").Pill()
@@Bootstrap.Label(LabelType.SuccessGreen,  "SuccessGreen").Pill()
)
</pre>
    }
    using (Bootstrap.BeginGridCol(0, 5, 5, 5, 6))
    {
        @Bootstrap.Label(LabelType.DefaultGray, "DefaultGray").Pill()
        @Bootstrap.Label(LabelType.InfoCyan, "InfoCyan").Pill()
        @Bootstrap.Label(LabelType.PrimaryBlue, "PrimaryBlue").Pill()
        <br />
        @Bootstrap.Label(LabelType.WarningOrange, "WarningOrange").Pill()
        @Bootstrap.Label(LabelType.DangerRed, "DangerRed").Pill()
        @Bootstrap.Label(LabelType.SuccessGreen, "SuccessGreen").Pill()
    }
}


<h3>Any content inside</h3>
@using (Bootstrap.BeginGridRow())
{
    using (Bootstrap.BeginGridCol(0, 7, 7, 7, 6))
    {
<pre>
@@Bootstrap.Label(LabelType.SuccessGreen)
    .Content("Regular Strings will be encoded (&lt;hi!&gt;);")
    .Content(new HtmlString("&lt;i&gt;IHtmlContent will NOT be encoded&lt;/i&gt; "))
)
</pre>
    }
    using (Bootstrap.BeginGridCol(0, 5, 5, 5, 6))
    {
        @(Bootstrap.Label(LabelType.SuccessGreen)
            .Content("Regular Strings will be encoded (<hi!>);")
            .Content(new HtmlString("<i>IHtmlContent will NOT be encoded</i> "))
        )
    }
}

<h3>Any HTML content</h3>
@using (Bootstrap.BeginGridRow())
{
    using (Bootstrap.BeginGridCol(0, 7, 7, 7, 6))
    {
<pre>
@@using (Bootstrap.Label(LabelType.SuccessGreen).BeginContent())
{
    Use &lt;code&gt;BeginContent()&lt;/code&gt; method and place any HTML markup inside (at your risk!)
}
</pre>
    }
    using (Bootstrap.BeginGridCol(0, 5, 5, 5, 6))
    {
        using (Bootstrap.Label(LabelType.SuccessGreen).BeginContent())
        {
            <text>Use <code>BeginContent()</code> method and place any HTML markup inside (at your risk!)</text>
        }
    }
}
